name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      -*


env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: monitor        

jobs:
  get-latest-tag:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v1
      - name: 'Get Latest tag'
        id: latest-tag
        uses: "WyriHaximus/github-action-get-previous-tag@master"  
        
    outputs:
        tag: ${{ steps.latest-tag.outputs.tag }}
  
  # Push image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    needs: [get-latest-tag]
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag gane5h/monitor:${{ needs.get-latest-tag.outputs.tag}}
        
      - name: Log into registry
        run: echo "${{secrets.DOCKERHUB_PASSWORD}}" | docker login docker.io -u "${{secrets.DOCKERHUB_USERNAME}}" --password-stdin 

      - name: Push image
        run: |
          docker push gane5h/monitor:${{ needs.get-latest-tag.outputs.tag}}
  
  deploy:
    runs-on: ubuntu-latest
    needs: [push, get-latest-tag]
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: echo tag
        run: echo "${{ needs.get-latest-tag.outputs.tag}}"
      - name: Create monitor.yaml from template file
        id: monitor-yaml
        env:
          tag: "${{ needs.get-latest-tag.outputs.tag}}"
        run: cat monitor.yaml.template | sed "s/{{tag}}/0.0.3/g" > monitor.yaml
      - name: cat
        run: cat monitor.yaml
          
      - name: Trigger deploy
        uses: Consensys/kubernetes-action@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f monitor.yaml

